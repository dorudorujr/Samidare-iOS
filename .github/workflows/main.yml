name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_13.0.app/Contents/Developer

jobs:
  build:
    runs-on: macOS-11

    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # Actionsで使用できるXcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'
      
      # 現在使われているXcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version
      
      # GoogleService-info.plistを生成
      - name: make dir
        run: mkdir Samidare-iOS/Resource/Firebase
      - name: Translate secrets of base64 into json
        env:
          GOOGLE_SERVICE: ${{ secrets.GOOGLE_SERVICE_PLIST }}
        run: echo $GOOGLE_SERVICE | base64 --decode > ./output.json
      - name: Translate json into plist and generate GoogleService-info.plist
        run: plutil -convert xml1 ./output.json -o ./Samidare-iOS/Resource/Firebase/GoogleService-Info-Debug.plist
      - name: Remove json file
        run: rm ./output.json
      
      # Mintのキャッシュ取得
      - name: Cache Mint packages
        id: mint-cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: ${{ runner.os }}-mint-
      
      # Mintのインストール
      - name: Install Mint
        run: brew install mint
      
      # Mintで管理しているライブラリをインストール
      - name: Install Mint library
        if: steps.mint-cache.outputs.cache-hit != 'true'
        run: mint bootstrap
      
      # Generatedディレクトリー作成
      # TODO: 少し強引な感じがするのでどうにかしたい
      - name: make Generated
        run: mkdir Samidare-iOS/Generated
      
      # SwiftGenを走らせる
      - name: Run SwiftGen
        run: mint run swiftgen config run --config swiftgen.yml
      
      # プロジェクトファイルの生成
      - name: Generate Xcode project with XcodeGen
        run: mint run xcodegen xcodegen generate
      
      # 確認(後で必ず消す)
      - name: cat MockResults.swift
        run: cat /Users/runner/work/Samidare-iOS/Samidare-iOS/Samidare-iOSTests/MockResults.swift
      
      # SPMのライブラリーをキャッシュ
      - name: Cache Swift Packages
        uses: actions/cache@v1
        with:
          path: SourcePackages
          key: ${{ runner.os }}-spm-${{ hashFiles('*.xcodeproj/project.xcworkspace/ xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spm-
      
      # 単体テスト
      - name: Xcode test
        run: xcodebuild
          -sdk iphonesimulator15.0
          -configuration DevelopDebug
          -scheme Samidare-Develop
          -destination 'platform=iOS Simulator,name=iPhone 13 Pro'
          -skip-testing:Samidare-iOSUITests
          clean test

