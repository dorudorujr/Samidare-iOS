name: Samidare
packages:
  Firebase:
    url: https://github.com/firebase/firebase-ios-sdk.git
    minorVersion: 10.5.0
  Realm:
    url: https://github.com/realm/realm-cocoa.git
    minorVersion: 10.36.0
  GoogleMobileAds:
    url: https://github.com/googleads/swift-package-manager-google-mobile-ads.git
    minorVersion: 10.1.0
  swift-snapshot-testing:
    url: https://github.com/pointfreeco/swift-snapshot-testing.git
    minorVersion: 1.11.0
  ComposableArchitecture:
    url: https://github.com/pointfreeco/swift-composable-architecture
    minorVersion: 0.51.0
options:
  bundleIdPrefix: com.sugiokaseiya
  deploymentTarget:
    iOS: 16.0
configs:
  Debug: debug
  DevelopDebug: debug
  Develop: release
  ReleaseDebug: debug
  Release: release
settings:
  base:
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
  configs:
    DevelopDebug:
      OTHER_SWIFT_FLAGS:
        - -D
        - DEVELOP
    Develop:
      OTHER_SWIFT_FLAGS:
        - -D
        - DEVELOP
      SWIFT_OPTIMIZATION_LEVEL:
        - -Onone
      GCC_OPTIMIZATION_LEVEL:
        - 0
    ReleaseDebug:
      OTHER_SWIFT_FLAGS:
        - -D
        - RELEASE
    Release:
      OTHER_SWIFT_FLAGS:
        - -D
        - RELEASE
schemes:
  Samidare-Develop:
    build:
      targets:
        Samidare: all
    run:
      config: DevelopDebug
    test:
      config: DevelopDebug
      gatherCoverageData: true
      language: ja
      region: JP
      coverageTargets:
        - Samidare
      targets:
        - name: SamidareTests
      environmentVariables:
        - variable: isUnitTest
          value: "true"
          isEnabled: true
    profile:
      config: Develop
    analyze:
      config: Develop
    archive:
      config: Develop
  Samidare-Release:
    build:
      targets:
        Samidare: [analyze, run, archive]
    run:
      config: ReleaseDebug
    test:
      config: ReleaseDebug
      gatherCoverageData: true
      coverageTargets:
        - Samidare
      targets: [SamidareTests]
      environmentVariables:
        - variable: isUnitTest
          value: "true"
          isEnabled: true
    profile:
      config: Release
    analyze:
      config: Release
    archive:
      config: Release
targets:
  Samidare:
    info:
      path: Samidare/Info.plist
      properties:
        UIUserInterfaceStyle: Light # Appearance指定だと何故か効かない.....
        UISupportedInterfaceOrientations: [UIInterfaceOrientationPortrait, UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight]
        UISupportedInterfaceOrientations~ipad: [UIInterfaceOrientationPortrait, UIInterfaceOrientationPortraitUpsideDown, UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight]
        UIApplicationSupportsIndirectInputEvents: true
        LSRequiresIPhoneOS: true
        UILaunchScreen: 
          UILaunchScreen:
        UIApplicationSceneManifest:
          UIApplicationSupportsMultipleScenes: true
        GADApplicationIdentifier: $(GAD_APPLICATION_IDENTIFIER)
        SKAdNetworkItems:
          SKAdNetworkIdentifier: cstr6suwn9.skadnetwork
        AdUnitIDs:
          banner: $(BANNER_ID)
        NSUserTrackingUsageDescription: 「許可」するとお客様に最適化された広告が表示されます
    type: application
    platform: iOS
    sources:
      - path: Samidare
        excludes:
          - "**/.gitkeep"
          - README.md
      - path: Samidare/README.md
        buildPhase: none
    dependencies:
      - package: Firebase
        product: FirebaseAnalytics
      - package: Firebase
        product: FirebaseFirestore
      - package: Firebase
        product: FirebaseCrashlytics
      - package: Firebase
        product: FirebaseFirestoreSwift
      - package: GoogleMobileAds
        product: GoogleMobileAds
      - package: Realm
        product: Realm
      - package: Realm
        product: RealmSwift
      - package: ComposableArchitecture
        product: ComposableArchitecture
    settings:
      base:
        TARGETED_DEVICE_FAMILY: 1
      configs:
        Debug:
          GAD_APPLICATION_IDENTIFIER: ca-app-pub-3940256099942544~1458002511
          BANNER_ID: ca-app-pub-3940256099942544/2934735716
          PROVISIONING_PROFILE_SPECIFIER: SugiokaWildcard
          CODE_SIGN_IDENTITY: iPhone Developer
          DEVELOPMENT_TEAM: URT7G4TP66
        DevelopDebug:
          GAD_APPLICATION_IDENTIFIER: ca-app-pub-3940256099942544~1458002511
          BANNER_ID: ca-app-pub-3940256099942544/2934735716
          PROVISIONING_PROFILE_SPECIFIER: SugiokaWildcard
          CODE_SIGN_IDENTITY: iPhone Developer
          DEVELOPMENT_TEAM: URT7G4TP66
        Develop:
          GAD_APPLICATION_IDENTIFIER: ca-app-pub-3940256099942544~1458002511
          BANNER_ID: ca-app-pub-3940256099942544/2934735716
          PROVISIONING_PROFILE_SPECIFIER: SugiokaWildcard
          CODE_SIGN_IDENTITY: iPhone Developer
          DEVELOPMENT_TEAM: URT7G4TP66
        ReleaseDebug:
          GAD_APPLICATION_IDENTIFIER: ca-app-pub-3940256099942544~1458002511
          BANNER_ID: ca-app-pub-3940256099942544/2934735716
          PROVISIONING_PROFILE_SPECIFIER: SugiokaWildcard
          CODE_SIGN_IDENTITY: iPhone Developer
          DEVELOPMENT_TEAM: URT7G4TP66
        Release:
          GAD_APPLICATION_IDENTIFIER: ca-app-pub-8080856618058856~5439596849
          BANNER_ID: ca-app-pub-8080856618058856/1855575051
          PROVISIONING_PROFILE_SPECIFIER: SamidareAppProduction
          CODE_SIGN_IDENTITY: iPhone Distribution
          DEVELOPMENT_TEAM: URT7G4TP66
    preBuildScripts:
      - name: SwiftGen
        script: |
          if test -d /opt/homebrew/bin; then
            PATH=/opt/homebrew/bin/:$PATH
          fi

          if which mint >/dev/null; then
            mint run swiftgen config run --config ${PROJECT_DIR}/swiftgen.yml
          else
            echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
          fi
        outputFiles:
          - $(SRCROOT)/Samidare/Generated/Localized.swift
          - $(SRCROOT)/Samidare/Generated/Images.swift
    postCompileScripts:
      - name: Firebase
        script: |
          if [ "${CONFIGURATION}" = "Release" ]; then
            cp -r "${PROJECT_DIR}/${PROJECT_NAME}/Resource/Firebase/GoogleService-Info-Release.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist"
          else
            cp -r "${PROJECT_DIR}/${PROJECT_NAME}/Resource/Firebase/GoogleService-Info-Debug.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist"
          fi
        basedOnDependencyAnalysis: false
      - name: SwiftLint
        script: |
          if test -d /opt/homebrew/bin; then
            PATH=/opt/homebrew/bin/:$PATH
          fi

          if which mint >/dev/null; then
            mint run swiftlint
          else
            echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
          fi
        basedOnDependencyAnalysis: false
      - name: LicensePlist
        script: |
          if test -d /opt/homebrew/bin; then
            PATH=/opt/homebrew/bin/:$PATH
          fi

          if which mint >/dev/null; then
            if [ $CONFIGURATION != "Release" ]; then
              xcrun --sdk macosx mint run LicensePlist license-plist --output-path $PROJECT_NAME/SupportingFiles/Settings.bundle --prefix Acknowledgements
            else
              echo "is release"
            fi
          else
            echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
          fi
        basedOnDependencyAnalysis: false
      - name: Generate Mocks with Mockolo
        script: |
          if test -d /opt/homebrew/bin; then
            PATH=/opt/homebrew/bin/:$PATH
          fi

          if which mint >/dev/null; then
            rm -f ${PROJECT_DIR}/SamidareTests/MockResults.swift
            xcrun --sdk macosx mint run mockolo mockolo --testable-imports Samidare --sourcedirs ${PROJECT_DIR} --destination ${PROJECT_DIR}/SamidareTests/MockResults.swift
          else
            echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
          fi
        outputFiles:
          - ${PROJECT_DIR}/SamidareTests/MockResults.swift
    postbuildScripts:
      - name: FirebaseCrashlytics
        script: |
          ${BUILD_DIR%/Build/*}/SourcePackages/checkouts/firebase-ios-sdk/Crashlytics/run
        inputFiles:
          - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}
          - $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)
        basedOnDependencyAnalysis: false
  SamidareTests:
    info:
      path: SamidareTests/Info.plist
    type: bundle.unit-test
    platform: iOS
    sources:
      - path: SamidareTests
      - path: SamidareTests/MockResults.swift
        optional: true
        type: file
    dependencies:
      - target: Samidare
      - package: swift-snapshot-testing
        product: SnapshotTesting
  SamidareUITests:
    info:
      path: SamidareUITests/Info.plist
    type: bundle.ui-testing
    platform: iOS
    sources:
      - path: SamidareUITests
        createIntermediateGroups: true
    dependencies:
      - target: Samidare
